<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.knight.Dao.MusicSite.musicbaseinfoMapper">
  <resultMap id="BaseResultMap" type="com.knight.Bean.musicbaseinfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 16:52:58 CST 2019.
    -->
    <result column="MusicId" jdbcType="BIGINT" property="musicid" />
    <result column="MusicName" jdbcType="VARCHAR" property="musicname" />
    <result column="Singer" jdbcType="VARCHAR" property="singer" />
    <result column="PlayNumber" jdbcType="BIGINT" property="playnumber" />
    <result column="Time" jdbcType="VARCHAR" property="time" />
    <result column="Type" jdbcType="VARCHAR" property="type" />
    <result column="Album" jdbcType="VARCHAR" property="album" />
    <result column="Language" jdbcType="VARCHAR" property="language" />
    <result column="LyricId" jdbcType="BIGINT" property="lyricid" />
    <result column="MusicAddress" jdbcType="VARCHAR" property="musicaddress" />
    <result column="MusicImg" jdbcType="VARCHAR" property="musicimg" />
    <result column="CreationDate" jdbcType="TIMESTAMP" property="creationdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 16:52:58 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 16:52:58 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 16:52:58 CST 2019.
    -->
    MusicId, MusicName, Singer, PlayNumber, Time, Type, Album, Language, LyricId, MusicAddress, 
    MusicImg, CreationDate
  </sql>
  <select id="selectByExample" parameterType="com.knight.Bean.musicbaseinfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 16:52:58 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from musicbaseinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.knight.Bean.musicbaseinfoExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 16:52:58 CST 2019.
    -->
    delete from musicbaseinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.knight.Bean.musicbaseinfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 16:52:58 CST 2019.
    -->
    insert into musicbaseinfo (MusicId, MusicName, Singer, 
      PlayNumber, Time, Type, 
      Album, Language, LyricId, 
      MusicAddress, MusicImg, CreationDate
      )
    values (#{musicid,jdbcType=BIGINT}, #{musicname,jdbcType=VARCHAR}, #{singer,jdbcType=VARCHAR}, 
      #{playnumber,jdbcType=BIGINT}, #{time,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{album,jdbcType=VARCHAR}, #{language,jdbcType=VARCHAR}, #{lyricid,jdbcType=BIGINT}, 
      #{musicaddress,jdbcType=VARCHAR}, #{musicimg,jdbcType=VARCHAR}, #{creationdate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.knight.Bean.musicbaseinfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 16:52:58 CST 2019.
    -->
    insert into musicbaseinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="musicid != null">
        MusicId,
      </if>
      <if test="musicname != null">
        MusicName,
      </if>
      <if test="singer != null">
        Singer,
      </if>
      <if test="playnumber != null">
        PlayNumber,
      </if>
      <if test="time != null">
        Time,
      </if>
      <if test="type != null">
        Type,
      </if>
      <if test="album != null">
        Album,
      </if>
      <if test="language != null">
        Language,
      </if>
      <if test="lyricid != null">
        LyricId,
      </if>
      <if test="musicaddress != null">
        MusicAddress,
      </if>
      <if test="musicimg != null">
        MusicImg,
      </if>
      <if test="creationdate != null">
        CreationDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="musicid != null">
        #{musicid,jdbcType=BIGINT},
      </if>
      <if test="musicname != null">
        #{musicname,jdbcType=VARCHAR},
      </if>
      <if test="singer != null">
        #{singer,jdbcType=VARCHAR},
      </if>
      <if test="playnumber != null">
        #{playnumber,jdbcType=BIGINT},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="album != null">
        #{album,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="lyricid != null">
        #{lyricid,jdbcType=BIGINT},
      </if>
      <if test="musicaddress != null">
        #{musicaddress,jdbcType=VARCHAR},
      </if>
      <if test="musicimg != null">
        #{musicimg,jdbcType=VARCHAR},
      </if>
      <if test="creationdate != null">
        #{creationdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.knight.Bean.musicbaseinfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 16:52:58 CST 2019.
    -->
    select count(*) from musicbaseinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 16:52:58 CST 2019.
    -->
    update musicbaseinfo
    <set>
      <if test="record.musicid != null">
        MusicId = #{record.musicid,jdbcType=BIGINT},
      </if>
      <if test="record.musicname != null">
        MusicName = #{record.musicname,jdbcType=VARCHAR},
      </if>
      <if test="record.singer != null">
        Singer = #{record.singer,jdbcType=VARCHAR},
      </if>
      <if test="record.playnumber != null">
        PlayNumber = #{record.playnumber,jdbcType=BIGINT},
      </if>
      <if test="record.time != null">
        Time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        Type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.album != null">
        Album = #{record.album,jdbcType=VARCHAR},
      </if>
      <if test="record.language != null">
        Language = #{record.language,jdbcType=VARCHAR},
      </if>
      <if test="record.lyricid != null">
        LyricId = #{record.lyricid,jdbcType=BIGINT},
      </if>
      <if test="record.musicaddress != null">
        MusicAddress = #{record.musicaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.musicimg != null">
        MusicImg = #{record.musicimg,jdbcType=VARCHAR},
      </if>
      <if test="record.creationdate != null">
        CreationDate = #{record.creationdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 28 16:52:58 CST 2019.
    -->
    update musicbaseinfo
    set MusicId = #{record.musicid,jdbcType=BIGINT},
      MusicName = #{record.musicname,jdbcType=VARCHAR},
      Singer = #{record.singer,jdbcType=VARCHAR},
      PlayNumber = #{record.playnumber,jdbcType=BIGINT},
      Time = #{record.time,jdbcType=VARCHAR},
      Type = #{record.type,jdbcType=VARCHAR},
      Album = #{record.album,jdbcType=VARCHAR},
      Language = #{record.language,jdbcType=VARCHAR},
      LyricId = #{record.lyricid,jdbcType=BIGINT},
      MusicAddress = #{record.musicaddress,jdbcType=VARCHAR},
      MusicImg = #{record.musicimg,jdbcType=VARCHAR},
      CreationDate = #{record.creationdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <insert id="InsertNoexist" parameterType="com.knight.Bean.musicbaseinfo" useGeneratedKeys="true" keyProperty="MusicId">
    INSERT INTO musicbaseinfo (MusicName,Singer,Time,Type,Album,Language,LyricId,MusicAddress,MusicImg,CreationDate)
    select #{musicname},#{singer},#{time},#{type},#{album},#{language},#{lyricid},#{musicaddress},#{musicimg}, #{creationdate}
    from dual where not exists
    (select 1 from musicbaseinfo where MusicName=#{musicname} and Singer=#{singer})
  </insert>

  <select id="selectMusicPage"  resultMap="BaseResultMap">
    select * from musicbaseinfo where MusicImg like #{url} limit #{startNum},#{endNum}
  </select>


  <select id="selectMusicByPage" parameterType="HashMap" resultMap="BaseResultMap">
    select * from musicbaseinfo limit #{startNum},#{endNum}
  </select>

  <update id="updateByAddress">
    UPDATE musicbaseinfo set MusicImg=#{address} where MusicId=#{id}
  </update>

</mapper>