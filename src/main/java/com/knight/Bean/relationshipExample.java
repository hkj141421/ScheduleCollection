package com.knight.Bean;

import java.util.ArrayList;
import java.util.List;

public class relationshipExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table relationshipinfo
     *
     * @mbg.generated Fri Jan 03 14:21:48 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table relationshipinfo
     *
     * @mbg.generated Fri Jan 03 14:21:48 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table relationshipinfo
     *
     * @mbg.generated Fri Jan 03 14:21:48 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationshipinfo
     *
     * @mbg.generated Fri Jan 03 14:21:48 CST 2020
     */
    public relationshipExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationshipinfo
     *
     * @mbg.generated Fri Jan 03 14:21:48 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationshipinfo
     *
     * @mbg.generated Fri Jan 03 14:21:48 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationshipinfo
     *
     * @mbg.generated Fri Jan 03 14:21:48 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationshipinfo
     *
     * @mbg.generated Fri Jan 03 14:21:48 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationshipinfo
     *
     * @mbg.generated Fri Jan 03 14:21:48 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationshipinfo
     *
     * @mbg.generated Fri Jan 03 14:21:48 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationshipinfo
     *
     * @mbg.generated Fri Jan 03 14:21:48 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationshipinfo
     *
     * @mbg.generated Fri Jan 03 14:21:48 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationshipinfo
     *
     * @mbg.generated Fri Jan 03 14:21:48 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table relationshipinfo
     *
     * @mbg.generated Fri Jan 03 14:21:48 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table relationshipinfo
     *
     * @mbg.generated Fri Jan 03 14:21:48 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andNativemusicidIsNull() {
            addCriterion("nativeMusicId is null");
            return (Criteria) this;
        }

        public Criteria andNativemusicidIsNotNull() {
            addCriterion("nativeMusicId is not null");
            return (Criteria) this;
        }

        public Criteria andNativemusicidEqualTo(String value) {
            addCriterion("nativeMusicId =", value, "nativemusicid");
            return (Criteria) this;
        }

        public Criteria andNativemusicidNotEqualTo(String value) {
            addCriterion("nativeMusicId <>", value, "nativemusicid");
            return (Criteria) this;
        }

        public Criteria andNativemusicidGreaterThan(String value) {
            addCriterion("nativeMusicId >", value, "nativemusicid");
            return (Criteria) this;
        }

        public Criteria andNativemusicidGreaterThanOrEqualTo(String value) {
            addCriterion("nativeMusicId >=", value, "nativemusicid");
            return (Criteria) this;
        }

        public Criteria andNativemusicidLessThan(String value) {
            addCriterion("nativeMusicId <", value, "nativemusicid");
            return (Criteria) this;
        }

        public Criteria andNativemusicidLessThanOrEqualTo(String value) {
            addCriterion("nativeMusicId <=", value, "nativemusicid");
            return (Criteria) this;
        }

        public Criteria andNativemusicidLike(String value) {
            addCriterion("nativeMusicId like", value, "nativemusicid");
            return (Criteria) this;
        }

        public Criteria andNativemusicidNotLike(String value) {
            addCriterion("nativeMusicId not like", value, "nativemusicid");
            return (Criteria) this;
        }

        public Criteria andNativemusicidIn(List<String> values) {
            addCriterion("nativeMusicId in", values, "nativemusicid");
            return (Criteria) this;
        }

        public Criteria andNativemusicidNotIn(List<String> values) {
            addCriterion("nativeMusicId not in", values, "nativemusicid");
            return (Criteria) this;
        }

        public Criteria andNativemusicidBetween(String value1, String value2) {
            addCriterion("nativeMusicId between", value1, value2, "nativemusicid");
            return (Criteria) this;
        }

        public Criteria andNativemusicidNotBetween(String value1, String value2) {
            addCriterion("nativeMusicId not between", value1, value2, "nativemusicid");
            return (Criteria) this;
        }

        public Criteria andExternalmusicidIsNull() {
            addCriterion("externalMusicId is null");
            return (Criteria) this;
        }

        public Criteria andExternalmusicidIsNotNull() {
            addCriterion("externalMusicId is not null");
            return (Criteria) this;
        }

        public Criteria andExternalmusicidEqualTo(String value) {
            addCriterion("externalMusicId =", value, "externalmusicid");
            return (Criteria) this;
        }

        public Criteria andExternalmusicidNotEqualTo(String value) {
            addCriterion("externalMusicId <>", value, "externalmusicid");
            return (Criteria) this;
        }

        public Criteria andExternalmusicidGreaterThan(String value) {
            addCriterion("externalMusicId >", value, "externalmusicid");
            return (Criteria) this;
        }

        public Criteria andExternalmusicidGreaterThanOrEqualTo(String value) {
            addCriterion("externalMusicId >=", value, "externalmusicid");
            return (Criteria) this;
        }

        public Criteria andExternalmusicidLessThan(String value) {
            addCriterion("externalMusicId <", value, "externalmusicid");
            return (Criteria) this;
        }

        public Criteria andExternalmusicidLessThanOrEqualTo(String value) {
            addCriterion("externalMusicId <=", value, "externalmusicid");
            return (Criteria) this;
        }

        public Criteria andExternalmusicidLike(String value) {
            addCriterion("externalMusicId like", value, "externalmusicid");
            return (Criteria) this;
        }

        public Criteria andExternalmusicidNotLike(String value) {
            addCriterion("externalMusicId not like", value, "externalmusicid");
            return (Criteria) this;
        }

        public Criteria andExternalmusicidIn(List<String> values) {
            addCriterion("externalMusicId in", values, "externalmusicid");
            return (Criteria) this;
        }

        public Criteria andExternalmusicidNotIn(List<String> values) {
            addCriterion("externalMusicId not in", values, "externalmusicid");
            return (Criteria) this;
        }

        public Criteria andExternalmusicidBetween(String value1, String value2) {
            addCriterion("externalMusicId between", value1, value2, "externalmusicid");
            return (Criteria) this;
        }

        public Criteria andExternalmusicidNotBetween(String value1, String value2) {
            addCriterion("externalMusicId not between", value1, value2, "externalmusicid");
            return (Criteria) this;
        }

        public Criteria andExternaltypeIsNull() {
            addCriterion("externalType is null");
            return (Criteria) this;
        }

        public Criteria andExternaltypeIsNotNull() {
            addCriterion("externalType is not null");
            return (Criteria) this;
        }

        public Criteria andExternaltypeEqualTo(String value) {
            addCriterion("externalType =", value, "externaltype");
            return (Criteria) this;
        }

        public Criteria andExternaltypeNotEqualTo(String value) {
            addCriterion("externalType <>", value, "externaltype");
            return (Criteria) this;
        }

        public Criteria andExternaltypeGreaterThan(String value) {
            addCriterion("externalType >", value, "externaltype");
            return (Criteria) this;
        }

        public Criteria andExternaltypeGreaterThanOrEqualTo(String value) {
            addCriterion("externalType >=", value, "externaltype");
            return (Criteria) this;
        }

        public Criteria andExternaltypeLessThan(String value) {
            addCriterion("externalType <", value, "externaltype");
            return (Criteria) this;
        }

        public Criteria andExternaltypeLessThanOrEqualTo(String value) {
            addCriterion("externalType <=", value, "externaltype");
            return (Criteria) this;
        }

        public Criteria andExternaltypeLike(String value) {
            addCriterion("externalType like", value, "externaltype");
            return (Criteria) this;
        }

        public Criteria andExternaltypeNotLike(String value) {
            addCriterion("externalType not like", value, "externaltype");
            return (Criteria) this;
        }

        public Criteria andExternaltypeIn(List<String> values) {
            addCriterion("externalType in", values, "externaltype");
            return (Criteria) this;
        }

        public Criteria andExternaltypeNotIn(List<String> values) {
            addCriterion("externalType not in", values, "externaltype");
            return (Criteria) this;
        }

        public Criteria andExternaltypeBetween(String value1, String value2) {
            addCriterion("externalType between", value1, value2, "externaltype");
            return (Criteria) this;
        }

        public Criteria andExternaltypeNotBetween(String value1, String value2) {
            addCriterion("externalType not between", value1, value2, "externaltype");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table relationshipinfo
     *
     * @mbg.generated do_not_delete_during_merge Fri Jan 03 14:21:48 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table relationshipinfo
     *
     * @mbg.generated Fri Jan 03 14:21:48 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}