package com.knight.Dao.MusicSite;

import com.knight.Bean.musicbaseinfo;
import com.knight.Bean.musicbaseinfoExample;

import java.util.HashMap;
import java.util.List;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

@Repository
public interface musicbaseinfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table musicbaseinfo
     *
     * @mbg.generated Sat Dec 28 16:52:58 CST 2019
     */
    long countByExample(musicbaseinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table musicbaseinfo
     *
     * @mbg.generated Sat Dec 28 16:52:58 CST 2019
     */
    int deleteByExample(musicbaseinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table musicbaseinfo
     *
     * @mbg.generated Sat Dec 28 16:52:58 CST 2019
     */
    int insert(musicbaseinfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table musicbaseinfo
     *
     * @mbg.generated Sat Dec 28 16:52:58 CST 2019
     */
    int insertSelective(musicbaseinfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table musicbaseinfo
     *
     * @mbg.generated Sat Dec 28 16:52:58 CST 2019
     */
    List<musicbaseinfo> selectByExample(musicbaseinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table musicbaseinfo
     *
     * @mbg.generated Sat Dec 28 16:52:58 CST 2019
     */
    int updateByExampleSelective(@Param("record") musicbaseinfo record, @Param("example") musicbaseinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table musicbaseinfo
     *
     * @mbg.generated Sat Dec 28 16:52:58 CST 2019
     */
    int updateByExample(@Param("record") musicbaseinfo record, @Param("example") musicbaseinfoExample example);

    int InsertNoexist(musicbaseinfo music);

    List<musicbaseinfo> selectMusicPage(@Param("url") String url,@Param("startNum") int startNum,@Param("endNum") int endNum);

    List<musicbaseinfo> selectMusicByPage( @Param("startNum") int startNum,@Param("endNum") int endNum);

    int updateByAddress(@Param("address") String address, @Param("id") Long id);
}